name: Test HydroShare Pull Requests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: 
      - '**'
  workflow_dispatch:

jobs:
  hydroshare-pull-request-tests:

    runs-on: ubuntu-latest
    #env:
    #  COVERAGE_TOTAL: 10

    steps:
    - uses: actions/checkout@v4

    - name: Run flake8
      run: |
        python -m pip install flake8
        ./run-pylint-jenkins

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Setup HydroShare
      run: |
        printf "%s\n" c | ./local-dev-first-start-only.sh

    - name: Run HydroShare Tests
      run: |
        docker exec hydroshare ./run-tests-jenkins
    
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/linux@v2
      if: always()
      with:
        files: |
          nosetests.xml
          pytests.xml
    
    # archive the test results
    - name: Archive Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          nosetests.xml
          pytests.xml
          coverage.xml

    - name: Run Locust Load Tests
      run: |
        docker exec hydroshare pip install -r locust/requirements.txt
        docker exec hydroshare locust --config locust/locust-gh-action.conf || true
    
    - name: Zip reports
      run: |
        cd locust/reports/csv/
        zip -r locust-report-csv.zip *.csv
        mv locust-report-csv.zip ../locust-report-csv.zip
        cd ../..
    
    - name: Archive Load Results
      uses: actions/upload-artifact@v4
      with:
        name: locust-results
        path: |
          locust/reports/locust-report.html
          locust/reports/locust-report-csv.zip
    
    - name: Check for errors
      run: |
        if [ -f locust/reports/csv/locust-report_failures.csv ]; then
            if tail -n +2 locust/reports/csv/locust-report_failures.csv | grep -q 'Error'; then
            echo "Errors found in locust report"
            exit 1
          fi
        fi